 module branch_comp (
	input  logic [31:0]  in_A,
	input  logic [31:0]  in_B,
	input  logic [1:0]   BrUn,
    	output logic   BrEq,
    	output logic   BrLT
);
    	always_comb //in_A, in_B, BrUn
    	begin
    		if(in_A == in_B)
    			begin	
    				assign BrEq = 1'b1;
    				assign BrLT = 1'b0;
    			end
    		else if (brUn == 1'b1)
	    		begin
	    			if (&signed(in_A) < &signed(in_B))
		    			begin	
		    				assign BrEq = 1'b0;
		    				assign BrLT = 1'b1;
		    			end
	    			else 
		    			begin	
		    				assign BrEq = 1'b0;
		    				assign BrLT = 1'b0;
		    			end
	    		end
    		else
	    		begin
	    			if (in_A < in_B)
		    			begin	
		    				assign BrEq = 1'b0;
		    				assign BrLT = 1'b1;
		    			end
	    			else 
		    			begin	
		    				assign BrEq = 1'b0;
		    				assign BrLT = 1'b0;
		    			end
	    		end
    	end
    	
 endmodule
